{
  "name": "GUI_paper_model_config_from_scratch_NoZloss_noDverification" //,"Dconvergence_V10Dupdate_DTE_batch24_LRG1e-4D1e-4_Range5e3_VGG_NonRel_WGAN10_NoLossLR_debug" //  please remove "debug_" during training
  , "use_tb_logger": false
  , "model":"srragan"
  , "scale": 4
  , "gpu_ids": [0]
  , "range": [0,1]

  , "datasets": {
    "train": {
      "name": "DIV2K"
      , "mode": "LRHR"
      , "dataroot_HR": "DIV2K_train/DIV2K_train_sub_HRx4.lmdb"
      , "dataroot_LR": "DIV2K_train/DIV2K_train_sub_bicLRx4.lmdb"
      , "subset_file": null
      , "use_shuffle": true
      , "n_workers": 8
      , "batch_size": 6
      , "batch_size_4_grads_G": 48
      , "batch_size_4_grads_D": 48
      , "patch_size": 256
      , "use_flip": true
      , "use_rot": true
    }
    , "val": {
      "name": "val_set14_part"
      , "mode": "LRHR"
      , "dataroot_HR": "Set14/Set14_HRx4" //"DIV2K_valid/DIV2K_valid_HRx4"//"Set14"
      , "dataroot_LR": "Set14/Set14_bicLRx4" //,"DIV2K_valid/DIV2K_valid_bicLRx4"//,"Set14_bicLRx4"
    }
  }

  , "path": {
    "root": "/media/ybahat/data/projects/SRGAN"
    , "pretrain_model_G_disabled": "../experiments/debug_002_RRDB_ESRGAN_x4_DIV2K_archived_181211-150404/models/2008_G.pth"
    //, "pretrain_model_G": "../pretrained_models/SRResNet_bicx4_in3nf64nb16.pth" //,"pretrained_models/RRDB_PSNR_x4.pth"
//    , "pretrain_model_G": "../pretrained_models/RRDB_ESRGAN_x4.pth" //,"../pretrained_models/RRDB_ESRGAN_x4.pth" //,"../pretrained_models/RRDB_PSNR_x4.pth"
//    , "pretrain_model_D": "../pretrained_models/D_ESRGAN_VGG_x4.pth" //,"../pretrained_models/D_ESRGAN_VGG_x4.pth","../pretrained_models/D_RRDB_PSNR_VGG_x4.pth"
}

  , "network_G": {
    "which_model_G": "RRDB_net" // RRDB_net | sr_resnet
    , "CEM_arch": 1
    , "latent_input": "all_layers" // "all_layers" //"all_layers","first_layer","None"
    , "latent_input_domain": "HR_downscaled" //"HR_downscaled","HR_rearranged","LR"
    , "latent_channels": "SVDinNormedOut_structure_tensor" //,"STD_1dir" //2,"STD_directional","structure_tensor","SVD_structure_tensor"
    , "norm_type": null
    , "mode": "CNA"
    , "nf": 64
    , "nb": 23
    , "in_nc": 3
    , "out_nc": 3
    , "gc": 32
    , "group": 1
  }
  , "network_D": {
    "which_model_D": "discriminator_vgg_128" //,"PatchGAN"
    , "relativistic": 0
    , "decomposed_input": 0
    , "pre_clipping": 0 //1
    , "add_quantization_noise": 0 //1
    , "norm_type": "batch"
    , "act_type": "leakyrelu"
    , "mode": "CNA"
    , "n_layers": 6
    , "nf": 64
    , "in_nc": 3
  }

  , "train": {
    "resume":0
    ,"lr_G": 1e-5 //1e-5
    , "weight_decay_G": 0
    , "beta1_G": 0.9
    , "lr_D": 1e-5 //1e-4
    , "lr_E": 1e-4
    , "lr_latent": 1e-5
    , "weight_decay_D": 0
    , "beta1_D": 0.9
    , "lr_scheme": "MultiStepLR"
    , "steps_4_loss_std": 500
    , "std_4_lr_drop": 1e6 //1.6
    , "lr_change_ratio": 4 // ratio between STD and slope of linear fit, under which lr is reduced
    , "lr_steps": [50000, 100000, 200000, 300000] //[5000, 10000, 20000, 30000] //
    , "lr_gamma": 0.5
    , "pixel_domain": "HR"
    , "pixel_criterion": "l1"
    , "feature_domain": "HR"
    , "feature_criterion": "l1"
    , "gan_type": "wgan-gp" //,"vanilla","lsgan","wgan-gp"
    , "optimalZ_loss_type": "l1"  //"None","hist","l1"
    , "D_verification": "past" //'current', 'convergence', 'past'
    , "steps_4_D_convergence": 2000
    , "min_D_prob_ratio_4_G": 1.05 //Average D prob ratio should be at least this on all preceeding D_valid_Steps_4_G_update steps
    , "min_mean_D_correct": 0.9 //At least this portion of images should be correctly classified by D in all preceeding D_valid_Steps_4_G_update steps.
    , "D_update_ratio": 10 //0
    , "D_valid_Steps_4_G_update": 10 //Perform G steps using l_gan only when D was successfull in previous D_update_ratio steps
    , "CEM_exp": 1 //Means I use loss mask and padding while training and testing, no matter if DTE_arch or not.

    , "pixel_weight": 0 //1e-2
    , "feature_weight": 0 //1
    , "gan_weight": 1 //5e-3
    , "latent_weight": 0 //1 //Weight on loss between G's output and the desired criterion given Z. Previously: Weight on loss on difference between z and the output of E(G(LR,z))
    , "optimalZ_loss_weight": 0 //100
    , "range_weight": 5000

    //for wgan-gp
    // , "D_update_ratio": 1
     , "D_init_iters": 0
     , "E_init_iters": 40000
     , "gp_weigth": 10

    , "manual_seed": 0
    , "niter": 510000 //23532 //500100 //5e5
    , "val_freq": 500 //5e3
    , "val_save_freq": 1e4
}

  , "logger": {
    "print_freq": 100 //200
    , "save_checkpoint_freq": 20 // Minutes//5e3
  }
}
